{"version":3,"sources":["components/HeaderComponent.js","components/FooterComponent.js","components/HomeComponent.js","redux/ActionTypes.js","redux/ActionCreators.js","components/PostModalComponent.js","components/LoadingComponent.js","components/BlogComponent.js","components/ContactComponent.js","components/JumbotronComponent.js","components/AboutComponent.js","components/MainComponent.js","redux/posts.js","App.js","redux/configureStore.js","reportWebVitals.js","index.js"],"names":["Header","props","toggleNav","bind","state","isNavOpen","this","setState","Navbar","dark","expand","className","NavbarToggler","onClick","NavbarBrand","href","src","height","width","alt","console","log","process","Collapse","isOpen","navbar","Nav","NavItem","to","Component","Footer","Home","Container","ADD_POST","ADD_POSTS","EDIT_POST","DELETE_POST","POSTS_LOADING","POSTS_LOADING_FAILED","POST_CREATION_FAILED","POST_EDIT_FAILED","POST_DELETED","POST_EDITED","POST_DELETE_FAILED","addPost","post","type","ActionTypes","payload","postCreationFailed","errmess","postEdited","postEditFailed","postDeleted","postDeleteFailed","fetchPosts","dispatch","postsLoading","axios","defaults","xsrfCookieName","xsrfHeaderName","get","then","posts","addPosts","catch","err","postsLoadingFailed","message","PostModal","title","body","user","id","handleChange","JSON","stringify","event","target","value","name","Form","onSubmit","handleSubmit","Modal","toggle","ModalHeader","ModalBody","Col","FormGroup","Label","Input","placeholder","onChange","e","ModalFooter","Row","margin-right","margin-left","Button","color","handleDelete","history","push","withRouter","Loading","Blog","createModal","editModal","editPost","match","params","postId","handleCreate","toggleCreateModal","toggleEditModal","handleEdit","newPost","submitPost","deletePost","isLoading","errMess","Array","isArray","data","renderedposts","sort","a","b","posted","map","renderPost","filter","parseInt","Card","CardBody","Media","left","object","heading","CardFooter","Intl","DateTimeFormat","hour","minute","hour12","year","month","day","format","Date","parse","renderPosts","connect","headers","put","delete","About","Jumbotron","style","backgroundImage","backgroundSize","reactOpen","backendOpen","dbOpen","reduxOpen","buildOpen","toggleCard","card","CardHeader","CardImg","Main","location","path","component","exact","Contact","Posts","action","store","createStore","combineReducers","applyMiddleware","thunk","logger","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.27ed09b8.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { Navbar, NavbarBrand, Nav, NavbarToggler, Collapse, NavItem } from 'reactstrap';\nimport { NavLink } from 'react-router-dom';\n\nclass Header extends Component {\n    constructor(props) {\n        super(props);\n    \n        this.toggleNav = this.toggleNav.bind(this);\n        this.state = {\n            isNavOpen: false,\n        };\n      }\n\n    toggleNav() {\n        this.setState({\n            isNavOpen: !this.state.isNavOpen\n        });\n    }\n\n    render() {\n        return (\n                <Navbar dark expand=\"md\" className=\"sticky-top\">\n                    <NavbarToggler onClick={this.toggleNav} />\n                    <NavbarBrand className=\"mr-auto\" href=\"/\"><img src={\"/static/favicon-32x32.png\"} height=\"32\" width=\"32\" alt='GY' /></NavbarBrand>\n                    {console.log(process.env.PUBLIC_URL + \"favicon-32x32.png\")}\n                    <Collapse isOpen={this.state.isNavOpen} navbar>\n                        <Nav className=\"mr-auto\" navbar>\n                            <NavItem>\n                                <NavLink className=\"nav-link\"  to='/home'><span className=\"fa fa-home fa-lg\"></span> Home</NavLink>\n                            </NavItem>\n                            <NavItem>\n                                <NavLink className=\"nav-link\" to='/blog'><span className=\"fa fa-info fa-lg\"></span> Blog</NavLink>\n                            </NavItem>\n                            <NavItem>\n                                <NavLink className=\"nav-link\" to='/contact'><span className=\"fa fa-address-book fa-lg\"></span> Contact</NavLink>\n                            </NavItem>\n                            <NavItem>\n                                <NavLink className=\"nav-link\" to='/about'><span className=\"fa fa-sitemap fa-lg\"></span> About</NavLink>\n                            </NavItem>\n                        </Nav>\n                    </Collapse>\n\n                    \n                </Navbar>\n\n\n\n\n\n        )\n    }\n}\n\nexport default Header;","import React, { Component } from 'react';\n// import { Row, Col } from 'reactstrap';\n\nclass Footer extends Component {\n\n    render() {\n        return (\n            <div className=\"footer footer-text\">\n                <p><i className=\"fa fa-copyright\"></i> Gabriel Ytterberg<br />\n                    <i className=\"fa fa-envelope-square\"></i> gytterberg [at] gmail [dot] com<br />\n                <a className=\"btn btn-social-icon btn-github\" href=\"https://github.com/gytterberg\"><i className=\"fa fa-github\"></i></a>\n                <a className=\"btn btn-social-icon btn-instagram\" href=\"https://www.instagram.com/gytterberg/\"><i className=\"fa fa-instagram\"></i></a>\n                <a className=\"btn btn-social-icon btn-linkedin\" href=\"https://www.linkedin.com/in/gabriel-ytterberg-8ab87a14/\"><i className=\"fa fa-linkedin\"></i></a> </p>\n            </div>\n        )\n    }\n}\n\nexport default Footer;","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport {\n    Container,\n    } from 'reactstrap';\n\nclass Home extends Component {\n\n    render() {\n        return (\n            <Container>\n                <h2>Hello!</h2>\n                <p>This is a demonstration project developed by Gabriel Ytterberg.</p>\n                <p>Gabriel Ytterberg is a software developer with experience in JavaScript, Python, and Java. This site is written in ES6 JavaScript using the React framework, and the back end is written in Python using the Django framework.</p>\n                <p>The blog page does not use authentication, so anyone can experiment with the features. For more details and code, see the <Link to=\"/about\">About</Link> page, or inspect the code at my <a className=\"\" href=\"https://github.com/gytterberg\">GitHub page.</a></p>\n\n            </Container>\n        )\n    }\n}\n\nexport default Home;","export const ADD_POST = 'ADD_POST';\n\nexport const ADD_POSTS = 'ADD_POSTS';\n\nexport const EDIT_POST = 'EDIT_POST';\n\nexport const DELETE_POST = 'DELETE_POST';\n\nexport const POSTS_LOADING = 'POSTS_LOADING';\n\nexport const POSTS_LOADING_FAILED = 'POSTS_LOADING_FAILED';\n\nexport const POST_CREATION_FAILED = 'POST_CREATION_FAILED';\n\nexport const POST_EDIT_FAILED = 'POST_EDIT_FAILED';\n\nexport const POST_DELETED = \"POST_DELETED\";\n\nexport const POST_EDITED = \"POST_EDITED\";\n\nexport const POST_DELETE_FAILED = 'POST_DELETE_FAILED';","import * as ActionTypes from './ActionTypes';\n\nimport axios from 'axios';\n\n// post submission ===============================\n\nexport const submitPost = (newPost) => (dispatch) => {\n    console.log(\"Submit: title: \", newPost.title, \" body: \", newPost.body, \" user: \", newPost.user);\n\n    axios.defaults.xsrfCookieName = 'csrftoken';\n    axios.defaults.xsrfHeaderName = 'X-CSRFToken';\n\n    const config = {\n        headers: {\n            'Content-Type': 'application/json'\n        }\n    }\n    axios.post(\"/api/posts/\", newPost, config)\n        .then(post => dispatch(addPost(newPost)))\n        .then(() => dispatch(fetchPosts()))\n        .catch(err => {dispatch(postCreationFailed(err.message)); console.log(err)});\n}\n\nexport const addPost = (post) => ({\n    type: ActionTypes.ADD_POST,\n    payload: post\n});\n\n\nexport const postCreationFailed = (errmess) => ({\n    type: ActionTypes.POST_CREATION_FAILED,\n    payload: errmess\n})\n\n// edit ===============================\n\nexport const editPost = (post) => (dispatch) => {\n    console.log(\"Edit post: \", JSON.stringify(post));\n\n    axios.defaults.xsrfCookieName = 'csrftoken';\n    axios.defaults.xsrfHeaderName = 'X-CSRFToken';\n\n    const config = {\n        headers: {\n            'Content-Type': 'application/json'\n        }\n    }\n\n    axios.put(\"/api/posts/\" + post.id + \"/\", {title: post.title, body: post.body, user: post.user}, config)\n        .then(post => dispatch(postEdited(post)))\n        .then(() => dispatch(fetchPosts()))\n        .catch(err => {dispatch(postEditFailed(err.message)); console.log(err)});\n        \n}\n\nexport const postEdited = (post) => ({\n    type: ActionTypes.POST_EDITED,\n    payload: post\n})\n\nexport const postEditFailed = (errmess) => ({\n    type: ActionTypes.POST_EDIT_FAILED,\n    payload: errmess\n})\n\n// delete ===============================\n\nexport const deletePost = (postId) => (dispatch) => {\n    // delete the post\n    console.log(\"Delete: \", postId);\n\n    axios.defaults.xsrfCookieName = 'csrftoken';\n    axios.defaults.xsrfHeaderName = 'X-CSRFToken';\n\n    axios.delete(\"/api/posts/\" + postId + \"/\")\n        .then(post => dispatch(postDeleted(post)))\n        .then(() => dispatch(fetchPosts()))\n        .catch(errmess => dispatch(postDeleteFailed(errmess)));\n}\n\nexport const postDeleted = (post) => ({\n    type: ActionTypes.POST_DELETED,\n    payload: post\n})\n\nexport const postDeleteFailed = (errmess) => ({\n    type: ActionTypes.POST_DELETE_FAILED,\n    payload: errmess\n})\n\n// fetch posts ===============================###\n\nexport const fetchPosts = () => (dispatch) => {\n    dispatch(postsLoading());\n\n\n    axios.defaults.xsrfCookieName = 'csrftoken';\n    axios.defaults.xsrfHeaderName = 'X-CSRFToken';\n\n\n    axios.get(\"/api/posts/\")\n        .then(posts => dispatch(addPosts(posts)))\n        .catch(err => {dispatch(postsLoadingFailed(err.message)); console.log(err)});\n}\n\nexport const postsLoading = () => ({\n    type: ActionTypes.POSTS_LOADING\n});\n\nexport const addPosts = (posts) => ({\n    type: ActionTypes.ADD_POSTS,\n    payload: posts\n});\n\nexport const postsLoadingFailed = (errmess) => ({\n    type: ActionTypes.POSTS_LOADING_FAILED,\n    payload: errmess\n});\n\n","import React, { Component } from 'react';\nimport { withRouter, } from 'react-router-dom';\n\nimport {\n    Container, Row, Col,\n    Modal, ModalHeader, ModalBody, ModalFooter,\n    Form, FormGroup, Label, Input,\n    Button,\n    } from 'reactstrap';\n\nclass PostModal extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            title: '',\n            body: '',\n            user: 'gy',\n            id: '',\n        }\n\n        this.handleChange = this.handleChange.bind(this);\n        console.log(JSON.stringify(props));\n    }\n\n    componentDidMount() {\n        if (this.props.type === \"edit\") {\n            this.setState({\n                title: this.props.post.title,\n                body: this.props.post.body,\n                user: this.props.post.user,\n                id: this.props.post.id,\n            })\n        }\n    }\n\n    handleChange(event) {\n        const target = event.target;\n        const value = target.value;\n        const name = target.name;\n\n        this.setState({\n          [name]: value\n        });\n      }\n\n    render() {\n        return(\n            <Container>\n                <Form className=\"form\" onSubmit={this.props.handleSubmit}>\n                    <Modal isOpen={true} toggle={this.props.toggle}>\n                        <ModalHeader toggle={this.props.toggle}>{this.props.type === \"create\" ? \"Create Post\" : \"Edit Post\"}</ModalHeader>\n                        <ModalBody>\n                                <Col>\n                                    <FormGroup>\n                                        <Label>Title</Label>\n                                        <Input type=\"text\" name=\"title\" id=\"title\" placeholder=\"Title\"\n                                                value={this.state.title}\n                                                onChange={ (e) => {\n                                                        this.handleChange(e) }}/>\n                                    </FormGroup>\n                                    <FormGroup>\n                                        <Label>Post</Label>\n                                        <Input type=\"textarea\" name=\"body\" id=\"body\" placeholder=\"Body\"\n                                                value={this.state.body}\n                                                onChange={ (e) => {\n                                                        this.handleChange(e) }}/>\n                                    </FormGroup>\n                                </Col>\n                        </ModalBody>\n\n                        <ModalFooter>\n                            <Row margin-right={0} margin-left={0}>\n                                <Col >\n                                    <Button type=\"submit\"\n                                            onClick={() => {this.props.type === \"create\" ?\n                                                            this.props.handleSubmit(this.state.title, this.state.body, this.state.user)\n                                                            : this.props.handleSubmit(this.state.title, this.state.body, this.state.user, this.state.id)}}\n                                            color=\"success\">Submit</Button>\n                                </Col>\n                                <Col>\n                                    {this.props.type === \"edit\" ? <Button type=\"submit\" onClick={() => {this.props.handleDelete(this.state.id); this.props.history.push('/blog');}}>Delete</Button> : null}\n                                </Col>\n                                <Col>\n                                    <Button type=\"button\" onClick={this.props.toggle}>Cancel</Button>\n                                </Col>\n                            </Row>\n                        </ModalFooter>\n                    </Modal>\n                </Form>\n            </Container>\n        );\n    }\n}\n\nexport default withRouter(PostModal);","import React from 'react';\n\nconst Loading = () => {\n    return(\n        <div className=\"col-12\">\n            <span className=\"fa fa-spinner fa-pulse fa-3x fa-fw text-primary\"></span>\n            <p>Loading...</p>\n        </div>\n    );\n};\n\nexport default Loading;","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter, NavLink } from 'react-router-dom';\n\nimport {\n    Container, Row, Col, Media,\n    Card, CardBody, CardFooter,\n    Button,\n    } from 'reactstrap';\n\n\nimport { fetchPosts, submitPost, editPost, deletePost } from '../redux/ActionCreators';\n\nimport PostModal from './PostModalComponent';\nimport Loading from './LoadingComponent';\n\n\nclass Blog extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            createModal: false,\n            editModal: false,\n            editPost: {},\n        }\n\n        if ( typeof props.match.params.postId != \"undefined\")\n            this.state.postId = props.match.params.postId;\n\n        this.handleCreate = this.handleCreate.bind(this);\n        this.toggleCreateModal = this.toggleCreateModal.bind(this);\n\n        this.toggleEditModal = this.toggleEditModal.bind(this);\n        this.handleEdit = this.handleEdit.bind(this);\n        this.handleDelete = this.handleDelete.bind(this);\n\n        console.log(JSON.stringify(props));\n        this.props.fetchPosts();\n    }\n\n    toggleCreateModal() {\n        this.setState({ createModal: !this.state.createModal });\n        console.log(\"In togglecreate, state: \", JSON.stringify(this.state));\n    };\n\n    toggleEditModal() {\n        this.setState({ editModal: !this.state.editModal });\n        console.log(\"In toggleEdit, state: \", JSON.stringify(this.state));\n\n    };\n\n    handleCreate(title, body, user) {\n        this.toggleCreateModal();\n        const newPost = {\n            title: title,\n            body: body,\n            user: user,\n        }\n        this.props.submitPost(newPost);\n    };\n\n    handleEdit(title, body, user, id) {\n        // edit post with id\n\n        const newPost = {\n            title: title,\n            body: body,\n            user: user,\n            id: id\n        }\n        console.log(\"In handleEdit, newPost: \", JSON.stringify(newPost));\n        this.props.editPost(newPost);\n        this.toggleEditModal();\n        this.setState({editPost: {}})\n\n\n    }\n\n    handleDelete(id) {\n\n        console.log(\"In handleDelete\", JSON.stringify(id));\n\n        this.props.deletePost(id);\n\n        this.toggleEditModal();\n        this.setState({editPost: {}})\n\n\n    }\n\n    renderPosts () {\n        // sort posts in descending time order\n\n        if ( this.props.posts.isLoading === true) {\n            /// got nothing to show\n            return (<Loading/>)\n        }\n\n        if ( this.props.posts.errMess !== null ) {\n            return (<div>{this.props.posts.errMess}</div>);\n        }\n\n        if ( typeof this.state.postId == \"undefined\" && Array.isArray(this.props.posts.posts.data)) {\n            // render all posts\n            console.log(\"How did we get here. Props: \", JSON.stringify(this.props));\n\n            const sortedposts = this.props.posts.posts.data.sort((a, b) => {\n                if (a.posted > b.posted)\n                    return -1;\n                else\n                    return 1;\n            })\n            // render each post individually\n            const renderedposts = sortedposts.map((post) => {\n                return (\n                    <div>\n                        {this.renderPost(post)}\n                    </div>\n                )}\n            )\n            return (\n                <Container>\n                    {renderedposts}\n                </Container>\n            )\n        } else if ( typeof this.state.postId != \"undefined\" && this.props.posts.posts !== []) {\n            // render single post\n            let post = this.props.posts.posts.data.filter((post) => post.id === parseInt(this.state.postId))[0];\n            return(\n                <Container>\n                    {this.renderPost(post)}\n                </Container>\n            );\n        }\n        console.log(\"How did we get here. Props: \", JSON.stringify(this.props));\n    }\n    \n    renderPost (post) {\n        return (\n            <Card className=\"postcard\">\n                <CardBody>\n                    <Media>\n                        <Media left href=\"#\"><Media object src=\"/static/favicon-32x32.png\" alt=\"placeholder\" className=\"avatar\"/></Media>\n                        <Media body>\n                            <Media heading>\n                                {post.title}\n                            </Media>\n                            {post.body}\n                        </Media>\n                    </Media>\n                </CardBody>\n                <CardFooter>\n                    <Row>\n                        <Col>\n                            {post.user} --- {new Intl.DateTimeFormat('en-US', { hour: 'numeric', minute: 'numeric', hour12: true, year: 'numeric', month: 'short', day: '2-digit'}).format(new Date(Date.parse(post.posted)))}\n                        </Col>\n                        <Col className=\"text-right\">\n                            <Button color=\"link\"><NavLink to={\"/blog/\" + post.id}>Link</NavLink></Button>---<Button color=\"link\" onClick={() => {this.setState({editPost: post}); this.toggleEditModal();}}>Edit</Button>\n                        </Col>\n                    </Row>\n                </CardFooter>\n            </Card>\n        )\n    }\n\n    render() {\n\n        return(\n            <Container>\n                <Row>\n                    <Col className=\"text-left\">\n                        {this.state.postId ? <Button color=\"link\"><NavLink to=\"/blog\">&lt; Back to all posts</NavLink></Button>\n                                            : null }\n                    </Col>\n                    <Col className=\"text-right\">\n                        <Button onClick={() => {console.log(\"Create post button clicked\"); this.toggleCreateModal()}} color=\"primary\">Create Post</Button>\n                    </Col>\n                        {this.props.isLoading ? <Loading className=\"text-center\"/> : this.renderPosts()}\n                </Row>\n                    {this.state.createModal ? <PostModal handleSubmit={this.handleCreate}\n                                                            toggle={this.toggleCreateModal}\n                                                            type=\"create\"/> \n                                            : null }\n                    {this.state.editModal ? <PostModal handleSubmit={this.handleEdit}\n                                                        toggle={this.toggleEditModal}\n                                                        type=\"edit\" \n                                                        post={this.state.editPost}\n                                                        handleDelete={this.handleDelete} />\n                                            : null }\n            </Container>\n        )\n\n    }\n}\n\n\nconst mapStateToProps = (state) => {\n    return {\n        posts: state.posts,\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return ({\n        fetchPosts: () => {dispatch(fetchPosts())},\n        submitPost: (newPost) => {dispatch(submitPost(newPost))},\n        editPost: (post) => {dispatch(editPost(post))},\n        deletePost: (postId) => {dispatch(deletePost(postId))},\n    })\n};\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Blog));","import React, { Component } from 'react';\n\n\nclass About extends Component {\n\n    render() {\n        return (\n            <div>\n                Contact section: ig, linkedin, github (email with obfuscator?)\n            </div>\n        )\n    }\n}\n\nexport default About;","import React from 'react';\nimport { Col, Container, Jumbotron } from 'reactstrap';\n\n\nconst Footer = () => {\n    return(\n        <Container className=\"jumbo-text \">\n            <Jumbotron  className=\"\" style={{ backgroundImage: \"url(/static/photosquat-cropped.jpg)\", backgroundSize: 'cover' }}>\n\n                <Col className=\"header header-text col-md-5 offset-6\" >\n                    <h3>ytterblog</h3>\n                    <p>A blog app and portfolio project by Gabriel Ytterberg</p>\n                </Col>\n\n            </Jumbotron>\n        </Container>\n    )\n}\n\nexport default Footer;","import React, { Component } from 'react';\nimport {\n    Container, Card, CardHeader, CardImg, CardBody, Col, Row, Collapse,\n    } from 'reactstrap';\n\nclass About extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            reactOpen: false,\n            backendOpen: false,\n            dbOpen: false,\n            reduxOpen: false,\n            buildOpen: false,\n        }\n        this.toggleCard = this.toggleCard.bind(this);\n    }\n\n    toggleCard(card) {\n        switch (card) {\n            case 'reactOpen': this.setState({reactOpen: !this.state.reactOpen}); break;\n            case 'backendOpen': this.setState({backendOpen: !this.state.backendOpen}); break;\n            case 'dbOpen': this.setState({dbOpen: !this.state.dbOpen}); break;\n            case 'reduxOpen': this.setState({reduxOpen: !this.state.reduxOpen}); break;\n            case 'buildOpen': this.setState({buildOpen: !this.state.buildOpen}); break;\n            default: break;\n        }\n    }\n\n    render() {\n        return (\n            <Container>\n                <h2>About this site</h2>\n                <Row>\n                    <Col className=\"col-md-6\">\n                        <p>This is a breakdown of the stack, explaining the structure of the app and what each component does and why it was chosen.</p>\n                    </Col>\n                    <Card className=\"col-md-4 card\">\n                        <CardHeader className=\"\">The stack</CardHeader>\n                        <CardBody>\n                            <dl>\n                                <dt>React</dt>\n                                <dd>Provides the front end UI.</dd>\n                                <dt>Redux</dt>\n                                <dd>Provides a persistent data store available to various components. Redux Logger tracks state changes and provides import debugging information.</dd>\n                                <dt>Axios</dt>\n                                <dd>Communicates with the back end via REST API.</dd>\n                                <dt>Django</dt>\n                                <dd>Provides the back end REST API and manages the SQL database, while serving the front end and static files.</dd>\n                            </dl>\n                        </CardBody>\n                    </Card>\n                </Row>\n                <Card>\n                    <CardHeader onClick={() => this.toggleCard('reactOpen')}>{ this.state.reactOpen ? <i className=\"fa fa-chevron-up\"/> : <i className=\"fa fa-chevron-down\"/> } React components and routing</CardHeader>\n                    <Collapse isOpen={this.state.reactOpen}>\n                        <CardImg className=\"container-fluid\"  src=\"/static/Main_w_routing.png\" style={{width: \"686px\"}} />\n                        <CardBody>\n                            <p>The front end of the app is written in ES6 JavaScript using the <strong>React</strong> framework. React is a powerful but simple framework for creating user interfaces in a responsive, cross platform way. It allows individual components to be encapsulated with their own state, and combined to create a complex UI. Pages are rendered using <strong>JSX</strong>, an extension to JavaScript that allows mixing html and JS expressions. This simplifies complex pages by combining the template and logic into a single module.</p>\n                            <br/><br/>\n                            <p>Front end routing is done in Main.js shown here. Each page is its own component, along with the header, footer and jumbotron image. The jumbotron is separate from the header so that the navbar remains sticky at the top, while the jumbotron can be scrolled past. <br/><br/>\n                            The \"/blog/:postId' and \"/blog/edit/:postId\" routes pass the ID number of the post in question to the Blog component, so an individual post can be viewed on its own and edited.<br/><br/>\n                            There is another component, PostModal, which handles the modal on the blog page. PostID is passed in through the Blog component, along with a prop indicating if the modal should render as a create post view or an edit post view.</p>\n                        </CardBody>\n                    </Collapse>\n                </Card>\n                <Card>\n                    <CardHeader onClick={() => this.toggleCard('backendOpen')}>{ this.state.backendOpen ? <i className=\"fa fa-chevron-up\"/> : <i className=\"fa fa-chevron-down\"/> } Back end components and routing</CardHeader>\n                    <Collapse isOpen={this.state.backendOpen}>\n                        <CardImg className=\"container-fluid\"  src=\"/static/urlpatterns.png\" style={{width: \"585px\"}}/>\n                        <CardBody>\n                            <p>The <strong>Django</strong> back end is set up to serve the front end, as well as manage the database and serve static files.\n                                <br/><br/>This is the Django router configuration module, urls.py. The first line catches requests for ytterblog.herokuapp.com/ and serves up the front end React bundle.\n                                <br/><br/>The second line is for the Django admin tool, not used in production. The third line catches requests to the REST API, used here to serve data from the database storing the blog posts.\n                                <br/><br/>The fourth line uses regex matching to route all other requests to the front end.\n                                <br/><br/>The last line serves up static files, located in the /staticfiles directory. Files are collected from various locations in the project directory in a post-build script.\n                            </p>\n                        </CardBody>\n                    </Collapse>\n                </Card>\n                <Card>\n                    <CardHeader onClick={() => this.toggleCard('dbOpen')}>{ this.state.dbOpen ? <i className=\"fa fa-chevron-up\"/> : <i className=\"fa fa-chevron-down\"/> } Database setup and model</CardHeader>\n                    <Collapse isOpen={this.state.dbOpen}>\n                        <CardImg  className=\"container-fluid\" src=\"/static/models.png\" style={{width: \"456px\"}} />\n                        <CardBody>\n                            <p>\n                                The blog posts are stored in Django's built in <strong>SQLite</strong> database. This is where the db model is configured, in models.py. The \"id\" field is the primary key and automatically handled by the database. The \"protected\" field allows me to prevent certain posts from being deleted or edited, while leaving the blog app open to any user to create update and delete unprotected posts.\n                                <br/><br/>Database entries are serialized into JSON and served by Django through the REST API.\n                            </p>\n                        </CardBody>\n                    </Collapse>\n                </Card>\n                <Card>\n                    <CardHeader onClick={() => this.toggleCard('reduxOpen')}>{ this.state.reduxOpen ? <i className=\"fa fa-chevron-up\"/> : <i className=\"fa fa-chevron-down\"/> } Redux store</CardHeader>\n                    <Collapse isOpen={this.state.reduxOpen}>\n                        <CardImg className=\"container-fluid\" src=\"/static/reduxsubmit.png\" style={{width: \"860px\"}} />\n                        <CardBody>\n                            <p>\n                                The <strong>Redux</strong> package allows the front end to store state in a centralized and easily debuggable way. It provides a single data store shared across components, while the <strong>redux-logger</strong> package adds helpful information about the current and previous state of the store. \n                                <br/><br/>This is the ActionCreators.js file, where Redux actions are defined and dispatched. Redux uses a system of \"actions\" which are methods that access and store state information app-wide. Exported actions are available to properly configured components in their props. All state changes are handled through Redux actions. \n                                <br/><br/><strong>Axios</strong> is a package used to simplify making HTTP requests to the backend API.\n                            </p>\n                        </CardBody>\n                    </Collapse>\n                </Card>\n                <Card>\n                    <CardHeader onClick={() => this.toggleCard('reduxOpen')}>{ this.state.buildOpen ? <i className=\"fa fa-chevron-up\"/> : <i className=\"fa fa-chevron-down\"/> } Build and deploy to Heroku</CardHeader>\n                    <Collapse isOpen={this.state.reduxOpen}>\n                        <CardImg className=\"container-fluid\" src=\"/static/packagejson.png\" style={{width: \"673px\"}} />\n                        <CardBody>\n                            <p><strong>Heroku</strong> provides powerful and simple app hosting. The build process begins with <strong>git</strong>. Changes are committed to the git repository, then pushed to the Heroku remote. This triggers Heroku's build process, which begins with building the JavaScript portion of the app.\n                            <br/><br/>React's <strong>package.json</strong> file contains the build scripts. The \"start\" script is for local development. The \"build\" script is run by Heroku, which builds an optimized production version of the app and bundles it into a series of files in the /build directory. The \"postbuild\" script is then run, which causes Django to run its static file collection script, copying the built app into the /staticfiles directory for serving, along with any files that have been added to the /public directory. The Python back end is then built, and the build process will be complete.</p>\n                        </CardBody>\n                    </Collapse>\n                </Card>\n            </Container>\n        )\n    }\n}\n\nexport default About;","import React from 'react';\n// import { TransitionGroup, CSSTransition } from 'react-transition-group';\nimport { Switch, Route, Redirect, withRouter } from 'react-router-dom'\n\nimport Header from './HeaderComponent';\nimport Footer from './FooterComponent';\nimport Home from './HomeComponent';\nimport Blog from './BlogComponent';\nimport Contact from './ContactComponent';\nimport Jumbotron from './JumbotronComponent';\nimport About from './AboutComponent';\n\nconst Main = (props) => {\n    return (\n        <div>\n            <Header />\n            <Jumbotron />\n            <Switch location={props.location}>\n                <Route path='/home' component={Home} />\n                <Route exact path='/blog' component={withRouter(Blog)} />\n                <Route path='/blog/:postId' component={withRouter(Blog)} />\n                <Route path='/blog/edit/:postId' component={withRouter(Blog)} />\n                <Route path='/contact' component={Contact} />\n                <Route path='/about' component={About} />\n                <Redirect to=\"/home\" />\n            </Switch>\n            <Footer />\n        </div>\n    )\n}\n\nexport default Main;","import * as ActionTypes from './ActionTypes';\n\n/// these are 'Reducers' for the blog posts\n/// these connect action creators with action types\n\nexport const Posts = (state = {isLoading: true, errMess: null, posts: []}, action) => {\n    switch (action.type) {\n        case ActionTypes.ADD_POST:\n            /// non analogous fix this\n            return {...state, isLoading: false, errMess: null, post: action.payload};\n        \n        case ActionTypes.ADD_POSTS:\n            // load posts into state from DB\n            return {...state, isLoading: false, errMess: null, posts: action.payload};\n\n        case ActionTypes.EDIT_POST:\n            // edit post\n            return {...state, isLoading: false, errMess: null, post: action.payload};\n\n        case ActionTypes.DELETE_POST:\n            // delete post\n            return {...state, isLoading: false, errMess: null, posts: []};\n\n        case ActionTypes.POSTS_LOADING:\n            // currently loading\n            return {...state, isLoading: true, errMess: null, posts: []}\n        \n        case ActionTypes.POSTS_LOADING_FAILED:\n            // failed to load posts, return an error message\n            return {...state, isLoading: false, errMess: action.payload, posts: []}\n\n        case ActionTypes.POST_CREATION_FAILED:\n            // failed to create post\n            return {...state, isLoading: false, errMess: action.payload, posts: []}\n\n        case ActionTypes.POST_EDIT_FAILED:\n            // failed to edit post\n            return {...state, isLoading: false, errMess: action.payload, post: []}\n\n        case ActionTypes.POST_DELETED:\n            // deleted\n            return {...state, isLoading: false, errMess: null, post: action.payload}\n\n        case ActionTypes.POST_EDITED:\n            // edited\n            return {...state, isLoading: false, errMess: null, post: action.payload}\n\n        case ActionTypes.POST_DELETE_FAILED:\n            // delete failed\n            return {...state, isLoading: false, errMess: action.payload, post: []}\n\n        default: return state;\n    }\n};","import './App.css';\nimport React, { Component } from 'react';\n\nimport { BrowserRouter } from 'react-router-dom';\n\nimport Main from './components/MainComponent';\n\nimport { Provider } from 'react-redux';\nimport { ConfigureStore } from './redux/configureStore';\n\nconst store = ConfigureStore();\n\nclass App extends Component {\n\n  render() {\n    return (\n      <div className=\"App\">\n        <BrowserRouter>\n          <Provider store={store}>\n            <Main/>\n          </Provider>\n        </BrowserRouter>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import {createStore, combineReducers, applyMiddleware } from 'redux';\nimport { Posts } from './posts';\n\nimport logger from 'redux-logger';\nimport thunk from 'redux-thunk';\n\n\n\n/* this initializes redux store at app start\n    we need to attach the reducers which make state changes, and initialize the form fields and state\n    this passes action creators (fetch, loading indicators, etc) etc to all components that are children of Provider\n*/\n\nexport const ConfigureStore = () => {\n    const store = createStore(\n        combineReducers({\n            posts: Posts,\n        }), applyMiddleware(thunk, logger)\n    );\n\n    return store;\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n // before below so below takes precedent\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nimport 'font-awesome/css/font-awesome.css';\nimport 'bootstrap-social/bootstrap-social.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}